from datetime import datetime

from telebot import types

import sql_requests


def _new_order_page(order):
    order_items = order.get_item_list()
    start_date = datetime.strptime(order.get_start_date(), "%Y-%m-%d %H:%M:%S")
    start_date = datetime.strftime(start_date, "%d-%m-%Y")
    message_text = '–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: <b>#' + order.get_order_id() + '</b>\n'
    message_text += '–ù–∞ –¥–∞—Ç—É: <b>' + start_date + '</b>\n\n'
    items_with_attributes = []

    for item in order_items:
        items_with_attributes.append(sql_requests.get_thing_by_ID(item))  # –ü–æ–¥—Ç—è–≥–∏–≤–∞—é—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    for item in items_with_attributes:
        if item[1] is not None:
            message_text += '<b>üö©[id' + str(item[0]) + "] " + item[1].upper() + '</b>\n'
    if order.get_discount() is not None and order.get_discount() > 0:
        message_text += '\n–°—É–º–º–∞: ' + str(order.get_price()) + '–†.\n'
        message_text += '–°–∫–∏–¥–∫–∞ –∑–∞ –∫–æ–º–ø–ª–µ–∫—Ç: ' + str(order.get_discount()) + '–†.\n'
        message_text += '<b>–ò—Ç–æ–≥–æ: ' + str(order.get_actual_price()) + '–†.</b>\n'
    else:
        message_text += '\n<b>–ò—Ç–æ–≥–æ: ' + str(order.get_actual_price()) + '–†.</b>\n'
    message_text += '\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: </b>' + order.get_phone()
    return message_text


'''
*************************************************
************* –°–¢–†–ê–ù–ò–ß–ö–ò –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê*******
*************************************************
'''


def admin_create_new_order_page(order):
    message_text = '<b>‚≠ê–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b>\n'
    message_text += _new_order_page(order)
    markup = types.InlineKeyboardMarkup()
    row = [types.InlineKeyboardButton("–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data="processing-order" + order.get_order_id()),
           types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="order-not-approved" + order.get_order_id())]
    markup.row(*row)
    message = {'message_text': message_text, 'markup': markup}
    return message


def admin_create_order_in_processing_page(order):
    message_text = '<b> –ó–∞–∫–∞–∑ –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É</b>\n'
    message_text += _new_order_page(order)
    markup = types.InlineKeyboardMarkup()
    row = [types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="approve-order" + order.get_order_id()),
           types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="order-not-approved" + order.get_order_id())]
    markup.row(*row)
    message = {'message_text': message_text, 'markup': markup}
    return message


def admin_create_order_approved_page(order):
    message_text = '<b> –ó–∞–∫–∞–∑ #' + str(order.get_order_id()) + ' –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</b>\n'
    markup = types.InlineKeyboardMarkup()
    row = [types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go-to-admin-menu")]
    markup.row(*row)
    message = {'message_text': message_text, 'markup': markup}
    return message


def admin_create_is_not_admin_page():
    message_text = "–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    markup = types.InlineKeyboardMarkup()
    row = [types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go-to-admin-menu")]
    markup.row(*row)
    message = {'message_text': message_text, 'markup': markup}
    return message


def admin_create_order_canceled_page(order_id):
    message_text = '<b> –ó–∞–∫–∞–∑ #' + str(order_id) + ' –æ—Ç–º–µ–Ω–µ–Ω</b>\n'
    markup = types.InlineKeyboardMarkup()
    row = [types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go-to-admin-menu")]
    markup.row(*row)
    message = {'message_text': message_text, 'markup': markup}
    return message


#  –°—Ç—Ä–∞–Ω–∏—á–∫–∞ —Å–æ–æ–±—â–∞–µ—Ç –æ —Ç–æ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
def admin_create_order_unavailable_page(admin, order_id):
    message_text = '–ó–∞–∫–∞–∑ <b>#' + str(order_id) + '</b> –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n'
    message_text += '–ê–¥–º–∏–Ω: <b>' + admin.admin_name + '</b>\n'
    message_text += '–¢–µ–ª–µ—Ñ–æ–Ω: <b>' + admin.admin_phone + '</b>\n'
    markup = types.InlineKeyboardMarkup()
    row = [types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go-to-admin-menu")]
    markup.row(*row)
    message = {'message_text': message_text, 'markup': markup}
    return message


'''
*************************************************
************* –°–¢–†–ê–ù–ò–ß–ö–ò –î–õ–Ø –ö–õ–ò–ï–ù–¢–ê*******
*************************************************
'''


def create_order_in_processing_page(order_id):
    message_text = '<b>‚≠ê–í–∞—à –∑–∞–∫–∞–∑ #' + str(order_id) + ' –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É</b>\n'
    markup = types.InlineKeyboardMarkup()
    row = [types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back-to-main-menu")]
    markup.row(*row)
    message = {'message_text': message_text, 'markup': markup}
    return message


def create_order_approved_page(order):
    start_date = datetime.strptime(order.get_start_date(), "%Y-%m-%d %H:%M:%S")
    start_date = datetime.strftime(start_date, "%d-%m-%Y")
    message_text = '<b>‚≠ê–í–∞—à –∑–∞–∫–∞–∑ #' + str(order.get_order_id()) + ' –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!</b>\n'
    message_text += '–ñ–¥–µ–º –í–∞—Å <b>' + start_date + '</b> –ø–æ –∞–¥—Ä–µ—Å—É: —É–ª.–ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∞—è 69, –í–æ–ª–æ–≥–¥–∞.\n'
    message_text += '–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: <b>' + str(order.get_actual_price()) + '</b>'
    markup = types.InlineKeyboardMarkup()
    row = [types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back-to-main-menu")]
    markup.row(*row)
    message = {'message_text': message_text, 'markup': markup}
    return message

